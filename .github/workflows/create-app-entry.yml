name: Register Application (Reusable)

on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      app_ingress:
        required: true
        type: string
      app_description:
        required: true
        type: string
      app_icon:
        required: false
        type: string
        default: ''
      is_active:
        required: false
        type: boolean
        default: true
      is_enabled:
        required: false
        type: boolean
        default: true
      auth_base_url:
        required: false
        type: string
        default: 'https://apps-be.lolmeida.com/auth/login'
    secrets:
      API_USERNAME:
        required: true
      API_PASSWORD:
        required: true
    outputs:
      status:
        value: ${{ jobs.register.outputs.status }}
      app_id:
        value: ${{ jobs.register.outputs.app_id }}

  workflow_dispatch:
    inputs:
      app_name:
        required: true
        type: string
        description:
          'Name of the application to register'
      app_ingress:
        required: true
        type: string
        default: 'https://auth.lolmeida.com'
        description:
          'Public URL where the application is accessible'
      app_description:
        required: true
        type: string
        description:
          'Description of the application'
      app_icon:
        required: false
        type: string
        default: ''
        description:
          'URL of the application icon (optional)'
      is_active:
        required: false
        type: boolean
        default: true
        description:
          'Whether the application is active'
      is_enabled:
        required: false
        type: boolean
        default: true
        description:
          'Whether the application is enabled'
      auth_base_url:
        required: false
        type: string
        default: 'https://apps-be.lolmeida.com/auth/login'
        description:
          'Authentication endpoint URL'
      dry_run:
        required: false
        type: boolean
        default: false
        description:
          'If true, only simulates the registration'

jobs:
  register:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.register-app.outputs.status }}
      app_id: ${{ steps.register-app.outputs.app_id }}
    steps:
      - name: Resolve inputs
        id: resolve
        run: |
          APP_NAME="${{ inputs.app_name || github.event.inputs.app_name }}"
          APP_URL="${{ inputs.app_ingress || github.event.inputs.app_ingress }}"
          APP_DESCRIPTION="${{ inputs.app_description || github.event.inputs.app_description }}"
          APP_ICON="${{ inputs.app_icon || github.event.inputs.app_icon }}"
          IS_ACTIVE="${{ inputs.is_active || github.event.inputs.is_active || 'true' }}"
          IS_ENABLED="${{ inputs.is_enabled || github.event.inputs.is_enabled || 'true' }}"
          AUTH_URL="${{ inputs.auth_base_url || github.event.inputs.auth_base_url || 'https://apps-be.lolmeida.com/auth/login' }}"

          # Normalizar valores booleanos
          IS_ACTIVE=$(echo "$IS_ACTIVE" | tr '[:upper:]' '[:lower:]')
          IS_ENABLED=$(echo "$IS_ENABLED" | tr '[:upper:]' '[:lower:]')

          # Exportar para próximos passos
          echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV
          echo "APP_URL=$APP_URL" >> $GITHUB_ENV
          echo "APP_DESCRIPTION=$APP_DESCRIPTION" >> $GITHUB_ENV
          echo "APP_ICON=$APP_ICON" >> $GITHUB_ENV
          echo "IS_ACTIVE=$IS_ACTIVE" >> $GITHUB_ENV
          echo "IS_ENABLED=$IS_ENABLED" >> $GITHUB_ENV
          echo "AUTH_URL=$AUTH_URL" >> $GITHUB_ENV

      - name: Register application
        id: register-app
        run: |
          echo "Registering application:"
          echo "Name: $APP_NAME"
          echo "URL: $APP_URL"

          # Authenticate
          USERNAME="${{ secrets.API_USERNAME }}"
          PASSWORD="${{ secrets.API_PASSWORD }}"

          AUTH_PAYLOAD=$(jq -n \
            --arg username "$USERNAME" \
            --arg password "$PASSWORD" \
            '{username: $username, password: $password}')

          echo "Authenticating against $AUTH_URL"
          TOKEN_RESPONSE=$(curl -s -X POST "$AUTH_URL" \
            -H 'Content-Type: application/json' \
            -d "$AUTH_PAYLOAD" \
            --max-time 30 \
            -w "HTTP_STATUS:%{http_code}")

          HTTP_STATUS=$(echo "$TOKEN_RESPONSE" | grep -o 'HTTP_STATUS:[0-9]*' | cut -d: -f2)

          if [[ "$HTTP_STATUS" != "200" ]]; then
            echo "❌ Authentication failed"
            echo "status=auth-failed" >> $GITHUB_OUTPUT
            exit 1
          fi

          TOKEN=$(echo "$TOKEN_RESPONSE" | sed 's/HTTP_STATUS:[0-9]*$//' | jq -r '.token')
          echo "✅ Authentication successful"

          # Default icon if empty
          if [[ -z "$APP_ICON" ]]; then
            APP_NAME_ENCODED=$(echo "$APP_NAME" | sed 's/ /%20/g')
            APP_ICON="https://placehold.co/600x400/white/gray?text=${APP_NAME_ENCODED}"
          fi

          REGISTER_PAYLOAD=$(jq -n \
            --arg name "$APP_NAME" \
            --arg url "$APP_URL" \
            --arg description "$APP_DESCRIPTION" \
            --arg icon "$APP_ICON" \
            --argjson isActive $IS_ACTIVE \
            --argjson isEnabled $IS_ENABLED \
            '{name: $name, url: $url, description: $description, icon: $icon, isActive: $isActive, isEnabled: $isEnabled}')

          REGISTER_RESPONSE=$(curl -s -X POST "https://apps-be.lolmeida.com/api/apps" \
            -H "Authorization: Bearer $TOKEN" \
            -H 'Content-Type: application/json' \
            -d "$REGISTER_PAYLOAD" \
            --max-time 30 \
            -w "HTTP_STATUS:%{http_code}")

          HTTP_STATUS=$(echo "$REGISTER_RESPONSE" | grep -o 'HTTP_STATUS:[0-9]*' | cut -d: -f2)
          RESPONSE_BODY=$(echo "$REGISTER_RESPONSE" | sed 's/HTTP_STATUS:[0-9]*$//')

          case "$HTTP_STATUS" in
            200|201)
              APP_ID=$(echo "$RESPONSE_BODY" | jq -r '.id // .app_id // "unknown"')
              echo "✅ App registered successfully!"
              echo "status=success" >> $GITHUB_OUTPUT
              echo "app_id=$APP_ID" >> $GITHUB_OUTPUT
              ;;
            409)
              echo "ℹ️ App already exists"
              echo "status=already-exists" >> $GITHUB_OUTPUT
              echo "app_id=existing" >> $GITHUB_OUTPUT
              ;;
            *)
              echo "❌ Registration failed with HTTP $HTTP_STATUS"
              echo "Response: $RESPONSE_BODY"
              echo "status=failed" >> $GITHUB_OUTPUT
              exit 1
              ;;
          esac
