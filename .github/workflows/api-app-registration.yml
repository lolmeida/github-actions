name: Complete App Registration (Test + Register)

on:
  workflow_call:
    inputs:
      app_name:
        description: 'Application name'
        required: true
        type: string
        default: 'My Test App'
      app_url:
        description: 'Application URL'
        required: true
        type: string
        default: 'https://my-app.lolmeida.com'
      app_description:
        description: 'Application description'
        required: true
        type: string
        default: 'Test application'
      app_icon:
        description: 'App icon URL (optional)'
        required: false
        type: string
      is_active:
        description: 'Is application active?'
        required: false
        type: boolean
        default: true
      is_enabled:
        description: 'Is application enabled?'
        required: false
        type: boolean
        default: true
      dry_run:
        description: 'Dry run mode'
        required: false
        type: boolean
        default: true
      skip_tests:
        description: 'Skip API tests (not recommended)'
        required: false
        type: boolean
        default: false

jobs:
  # Stage 1: Test API (unless skipped)
  test-api:
    if: ${{ !inputs.skip_tests }}
    uses: ./.github/workflows/test-api.yml
    secrets:
      API_USERNAME: ${{ secrets.API_USERNAME }}
      API_PASSWORD: ${{ secrets.API_PASSWORD }}

  # Stage 2: Register app (only if tests passed or were skipped)
  register-app:
    needs: test-api
    if: always() && (inputs.skip_tests || needs.test-api.outputs.api_ready == 'true')
    uses: ./.github/workflows/register-app.yml
    with:
      app_name: ${{ inputs.app_name }}
      app_url: ${{ inputs.app_url }}
      app_description: ${{ inputs.app_description }}
      app_icon: ${{ inputs.app_icon }}
      is_active: ${{ inputs.is_active }}
      is_enabled: ${{ inputs.is_enabled }}
      dry_run: ${{ inputs.dry_run }}
    secrets:
      API_USERNAME: ${{ secrets.API_USERNAME }}
      API_PASSWORD: ${{ secrets.API_PASSWORD }}

  # Stage 3: Show results
  show-results:
    needs: [test-api, register-app]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Show complete results
        run: |
          echo "Complete Registration Results"
          echo "============================="
          
          # Test results
          if [[ "${{ inputs.skip_tests }}" == "true" ]]; then
            echo "üîÑ API tests: SKIPPED"
          elif [[ "${{ needs.test-api.result }}" == "success" ]]; then
            if [[ "${{ needs.test-api.outputs.api_ready }}" == "true" ]]; then
              echo "‚úÖ API tests: PASSED"
            else
              echo "‚ö†Ô∏è API tests: Some issues found"
            fi
          else
            echo "‚ùå API tests: FAILED"
          fi
          
          # Registration results
          if [[ "${{ needs.register-app.result }}" == "success" ]]; then
            echo "üìù Registration: ${{ needs.register-app.outputs.status }}"
            echo "üÜî App ID: ${{ needs.register-app.outputs.app_id }}"
          
            case "${{ needs.register-app.outputs.status }}" in
              "success")
                echo "üéâ App successfully registered!"
                ;;
              "already-exists")
                echo "‚ÑπÔ∏è App already exists"
                ;;
              "dry-run-success")
                echo "üîç Dry run completed"
                ;;
            esac
          elif [[ "${{ needs.register-app.result }}" == "skipped" ]]; then
            echo "‚è≠Ô∏è Registration: SKIPPED (tests failed)"
          else
            echo "‚ùå Registration: FAILED"
          fi
          
          echo ""
          echo "Summary:"
          if [[ "${{ inputs.dry_run }}" == "true" ]]; then
            echo "This was a dry run - no registration was made"
          else
            echo "Registration process completed"
          fi